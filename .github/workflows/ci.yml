name: CI Tests

on:
  pull_request:
  push:
  workflow_dispatch:
jobs:
  Sphinx-Pytest-Coverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env: [environment_a, environment_b, conda-forge]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache
      env:
        # Increase this value to reset cache
        CACHE_NUMBER: 2
      with:
        path: /usr/share/miniconda/envs/im${{ matrix.env }}
        key: ${{ format('{0}-conda-improver-{1}-{2}-{3}', runner.os, env.CACHE_NUMBER, matrix.env, hashFiles(format('envs/{0}.yml', matrix.env))) }}
    - name: conda env update
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda install -c conda-forge mamba
        rm -f /usr/share/miniconda/pkgs/cache/*.json # workaround for mamba-org/mamba#488
        mamba env update -q --file envs/${{ matrix.env }}.yml --name im${{ matrix.env }}
    - name: conda info
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        conda info
        conda list
    - name: sphinx documentation
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        make -C doc html SPHINXOPTS="-W --keep-going"
    - name: pytest without coverage
      if: matrix.env == 'conda-forge'
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        pytest
    - name: pytest with coverage
      if: matrix.env != 'conda-forge'
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        pytest --cov=improver --cov-report xml:coverage.xml
    - name: codacy upload
      if: env.CODACY_PROJECT_TOKEN && matrix.env == 'environment_a'
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        python-codacy-coverage -v -r coverage.xml
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
    - name: codecov upload
      uses: codecov/codecov-action@v1
      with:
        name:  ${{ matrix.env }}
      if: matrix.env != 'conda_forge'
  Codestyle-and-flake8:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env: [environment_a]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache
      env:
        # Increase this value to reset cache
        CACHE_NUMBER: 2
      with:
        path: /usr/share/miniconda/envs/im${{ matrix.env }}
        key: ${{ format('{0}-conda-improver-{1}-{2}-{3}', runner.os, env.CACHE_NUMBER, matrix.env, hashFiles(format('envs/{0}.yml', matrix.env))) }}
    - name: conda env update
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda install -c conda-forge mamba
        rm -f /usr/share/miniconda/pkgs/cache/*.json # workaround for mamba-org/mamba#488
        mamba env update -q --file envs/${{ matrix.env }}.yml --name im${{ matrix.env }}
    - name: conda info
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        conda info
        conda list
    - name: isort
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        isort --check-only .
    - name: black
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        black --check .
    - name: flake8
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        flake8 improver improver_tests
  Safety-Bandit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env: [environment_a, environment_b, conda-forge]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache
      env:
        # Increase this value to reset cache
        CACHE_NUMBER: 2
      with:
        path: /usr/share/miniconda/envs/im${{ matrix.env }}
        key: ${{ format('{0}-conda-improver-{1}-{2}-{3}', runner.os, env.CACHE_NUMBER, matrix.env, hashFiles(format('envs/{0}.yml', matrix.env))) }}
    - name: conda env update
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda install -c conda-forge mamba
        rm -f /usr/share/miniconda/pkgs/cache/*.json # workaround for mamba-org/mamba#488
        mamba env update -q --file envs/${{ matrix.env }}.yml --name im${{ matrix.env }}
    - name: conda info
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        conda info
        conda list
    - name: safety
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        safety check || true
    - name: bandit
      run: |
        source '/usr/share/miniconda/etc/profile.d/conda.sh'
        conda activate im${{ matrix.env }}
        bandit -r improver
