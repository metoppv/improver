name: CI Tests

on:
  pull_request:
  push:
    branches:
      - master  # Run tests only when changes are pushed to 'default' branch

jobs:
  Test-Coverage:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Environment creation
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: envs/latest.yml
        init-shell: bash
        cache-environment: true

    - name: Environment info
      run: |
        micromamba info
        micromamba list
      shell: bash -el {0}

    - name: pytest
      run: |
          pytest --cov=improver --cov-report=term --cov-report=html | tee coverage_output.txt; test ${PIPESTATUS[0]} -eq 0
      shell: micromamba-shell {0}

    - name: Fetch reference coverage report from artifact
      uses: actions/download-artifact@v3
      with:
        name: coverage-report-master
        path: covref

    - name: Compare coverage
      id: comp-coverage
      run: |
        pr_cov=$(grep TOTAL coverage_output.txt | awk '{print $NF}' | awk '{print substr($0, 1, length($0)-1)}')
        echo "pr_cov=$pr_cov" | tee -a $GITHUB_OUTPUT
        ref_cov=$(grep TOTAL covref/coverage_output.txt | awk '{print $NF}' | awk '{print substr($0, 1, length($0)-1)}')
        echo "ref_cov=$ref_cov" | tee -a $GITHUB_OUTPUT
        if (( (( ref_cov - pr_cov )) > 1 )); then
            echo "coverage_decreased=true" | tee -a $GITHUB_OUTPUT
        else
            echo "coverage_decreased=false" | tee -a $GITHUB_OUTPUT
        fi

    - name: Upload coverage report
      if: steps.comp-coverage.outputs.coverage_decreased == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-pr
        path: |
          coverage_output.txt
          htmlcov/

    - name: Coverage report PR comment
      if: steps.comp-coverage.outputs.coverage_decreased == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          comment = "The test coverage has decreased from ${{ steps.comp-coverage.outputs.ref_cov }}% to ${{ steps.comp-coverage.outputs.pr_cov }}% (commit SHA: ${{ github.event.pull_request.head.sha }})."
          comment += "\nPlease review test coverage.  Report uploaded as artifact.";
          comment += `\nCoverage report: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts`;
          console.log(comment)
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });


  Sphinx-Pytest:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        env: [environment_a, environment_b, conda-forge]

    steps:
    - uses: actions/checkout@v5

    - name: Environment creation
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: envs/${{ matrix.env }}.yml
        init-shell: bash
        cache-environment: true

    - name: Environment info
      run: |
        micromamba info
        micromamba list
      shell: bash -el {0}

    - name: safety
      run: |
        micromamba install safety
        safety check || true
      shell: micromamba-shell {0}

    - name: sphinx documentation
      run: |
        make -C doc html SPHINXOPTS="-W --keep-going"
      shell: micromamba-shell {0}

    - name: pytest
      run: |
        pytest
      shell: micromamba-shell {0}


  pre-commit-checks:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:

    - name: improver checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: 3.12
        cache: 'pip'

    - name: pip install pre-commit
      run: |
        pip install pre-commit

    - name: Python interpreter version sha (PYSHA)
      run: echo "PYSHA=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV

    - name: Cache pre-commit
      uses: actions/cache@v4
      id: pre-commit-cache
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PYSHA }}|${{ hashFiles('.pre-commit-config.yaml') }}

    - name: pre-commit install
      run: |
        pre-commit install

    - name: pre-commit run
      run: |
        pre-commit run --verbose --color=always --all-files

  PR-standards:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:

      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check CONTRIBUTING.md
        uses: cylc/release-actions/check-shortlog@v1
