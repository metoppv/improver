#!/usr/bin/env python
# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# (C) British Crown Copyright 2017-2018 Met Office.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
"""Script to convert from probabilities to ensemble realization data."""

from improver.argparser import ArgParser
from improver.ensemble_copula_coupling.ensemble_copula_coupling import (
    GeneratePercentilesFromProbabilities, RebadgePercentilesAsRealizations)
from improver.utilities.load import load_cube
from improver.utilities.save import save_netcdf


def main():
    """Convert from probabilities to ensemble realizations via a CLI."""

    cli_specific_arguments = [
        (['--no-of-realizations'],
         {'metavar': 'NUMBER_OF_REALIZATIONS', 'default': None, 'type': int,
          'help': (
            'Optional definition of the number of ensemble realizations to be '
            'generated. These are generated through an intermediate '
            'percentile representation. These percentiles will be distributed '
            'regularly with the aim of dividing into blocks of equal '
            'probability.')
          })]

    cli_definition = {'central_arguments': ('input_file', 'output_file'),
                      'specific_arguments': cli_specific_arguments,
                      'description': ('Convert a dataset containing '
                                      'probabilities into one containing '
                                      'ensemble realizations.')}

    args = ArgParser(**cli_definition).parse_args()

    cube = load_cube(args.input_filepath)

    cube = GeneratePercentilesFromProbabilities().process(
            cube, no_of_percentiles=args.no_of_realizations)
    cube = RebadgePercentilesAsRealizations().process(cube)

    save_netcdf(cube, args.output_filepath)


if __name__ == '__main__':
    main()
